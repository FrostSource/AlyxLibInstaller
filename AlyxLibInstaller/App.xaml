<?xml version="1.0" encoding="utf-8"?>
<Application
    x:Class="AlyxLibInstaller.App"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:AlyxLibInstaller">
    <Application.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <XamlControlsResources xmlns="using:Microsoft.UI.Xaml.Controls" />
                <!-- Other merged dictionaries here -->
            </ResourceDictionary.MergedDictionaries>
            <!-- Other app resources here -->

            <!-- Define a critical red button style -->
            <Style x:Key="CriticalRedButtonStyle" TargetType="Button" BasedOn="{StaticResource DefaultButtonStyle}">
                <!-- Base Background -->
                <Setter Property="Background" Value="#B71C1C"/>
                <!-- Darker red -->
                <Setter Property="Foreground" Value="White"/>
            </Style>

            <!-- Critical red style for SplitButton to match CriticalRedButtonStyle, including hover state -->
            <Style x:Key="CriticalRedSplitButtonStyle" TargetType="SplitButton" BasedOn="{StaticResource AccentSplitButtonStyle}">
                <Setter Property="Background" Value="#B71C1C"/>
                <Setter Property="Foreground" Value="White"/>
                <Setter Property="BorderBrush" Value="#B71C1C"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="CornerRadius" Value="4"/>
                <Setter Property="Padding" Value="8,4"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="SplitButton">
                            <Grid>
                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="CommonStates">
                                        <VisualState x:Name="Normal"/>
                                        <VisualState x:Name="PointerOver">
                                            <Storyboard>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BackgroundElement" Storyboard.TargetProperty="Fill">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="#B71C1C"/>
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BorderElement" Storyboard.TargetProperty="Stroke">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="#B71C1C"/>
                                                </ObjectAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="Pressed">
                                            <Storyboard>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BackgroundElement" Storyboard.TargetProperty="Fill">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="#8A1616"/>
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BorderElement" Storyboard.TargetProperty="Stroke">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="#8A1616"/>
                                                </ObjectAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="Disabled">
                                            <Storyboard>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BackgroundElement" Storyboard.TargetProperty="Fill">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="#40B71C1C"/>
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BorderElement" Storyboard.TargetProperty="Stroke">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="#40B71C1C"/>
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="#80FFFFFF"/>
                                                </ObjectAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>
                                <Border x:Name="BorderElement"
                                        Background="Transparent"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        CornerRadius="{TemplateBinding CornerRadius}">
                                    <Grid>
                                        <Rectangle x:Name="BackgroundElement" Fill="{TemplateBinding Background}" RadiusX="4" RadiusY="4"/>
                                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center">
                                            <ContentPresenter x:Name="ContentPresenter"
                                                Content="{TemplateBinding Content}"
                                                ContentTemplate="{TemplateBinding ContentTemplate}"
                                                VerticalAlignment="Center"
                                                HorizontalAlignment="Center"
                                                Foreground="{TemplateBinding Foreground}" />
                                            <FontIcon Glyph="&#xE70D;" Margin="8,0,0,0" Foreground="{TemplateBinding Foreground}" FontSize="12" VerticalAlignment="Center"/>
                                        </StackPanel>
                                    </Grid>
                                </Border>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="AccentSplitButtonStyle" TargetType="SplitButton">
                <Setter Property="Background" Value="{ThemeResource AccentFillColorDefaultBrush}" />
                <Setter Property="Foreground" Value="{ThemeResource AccentTextFillColorPrimaryBrush}" />
            </Style>

            <!-- Normal (Info) Color -->
            <Color x:Key="DebugConsoleNormalTextColor">#AAAAAA</Color>
            <!-- Light Gray for both themes -->

            <!-- Verbose Color -->
            <Color x:Key="DebugConsoleVerboseTextColor">#5C5C5C</Color>

            <!-- Warning Color -->
            <Color x:Key="DebugConsoleWarningTextColor">#FFA500</Color>
            <!-- Amber for both themes -->

            <!-- Verbose Warning Color -->
            <Color x:Key="DebugConsoleVerboseWarningTextColor">#FFB74D</Color>
            <!-- Lighter Amber for verbose warnings -->

            <!-- Info Color -->
            <Color x:Key="DebugConsoleInfoTextColor">#42A5F5</Color>
            <!-- Soft Blue for informational messages -->

            <!-- Error Color -->
            <Color x:Key="DebugConsoleErrorTextColor">#F44336</Color>
            <!-- Bright Red for both themes -->

            <!-- Success Color -->
            <Color x:Key="DebugConsoleSuccessTextColor">#4CAF50</Color>
            <!-- Standard Green for success messages -->

            <SolidColorBrush x:Key="WarningTextBrush" Color="{StaticResource DebugConsoleWarningTextColor}" />
            <SolidColorBrush x:Key="ErrorTextBrush" Color="{StaticResource DebugConsoleErrorTextColor}" />
        </ResourceDictionary>
    </Application.Resources>
</Application>
